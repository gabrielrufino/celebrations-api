name: Continuous Delivery

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Deploy using SSH
        uses: appleboy/ssh-action@master
        env:
          PROD_ADMIN_JWT_SECRET: ${{ secrets.PROD_ADMIN_JWT_SECRET }}
          PROD_API_TOKEN_SALT: ${{ secrets.PROD_API_TOKEN_SALT }}
          PROD_APP_KEYS: ${{ secrets.PROD_APP_KEYS }}
          PROD_HOST: ${{ secrets.PROD_HOST }}
          PROD_JWT_SECRET: ${{ secrets.PROD_JWT_SECRET }}
          PROD_PORT: ${{ secrets.PROD_PORT }}
          PROD_REPOSITORY_FOLDER: ${{ secrets.PROD_REPOSITORY_FOLDER }}
        with:
          host: ${{ secrets.SERVER_SSH_HOST }}
          username: ${{ secrets.SERVER_SSH_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_SSH_PORT }}
          envs: PROD_ADMIN_JWT_SECRET,PROD_API_TOKEN_SALT,PROD_APP_KEYS,PROD_HOST,PROD_JWT_SECRET,PROD_PORT,PROD_REPOSITORY_FOLDER
          script: |
            if [ ! -d $PROD_REPOSITORY_FOLDER ]
            then
              git clone https://github.com/gabrielrufino/celebrations-api.git $PROD_REPOSITORY_FOLDER
              touch .env
            fi
            cd $PROD_REPOSITORY_FOLDER
            git pull origin main
            echo "ADMIN_JWT_SECRET=$PROD_ADMIN_JWT_SECRET" >> .env
            echo "API_TOKEN_SALT=$PROD_API_TOKEN_SALT" >> .env
            echo "APP_KEYS=$PROD_APP_KEYS" >> .env
            echo "HOST=$PROD_HOST" >> .env
            echo "JWT_SECRET=$PROD_JWT_SECRET" >> .env
            echo "PORT=$PROD_PORT" >> .env
            npm ci --production --silent
            NODE_ENV=production npm run build 
            npx pm2 startOrReload ecosystem.config.js
